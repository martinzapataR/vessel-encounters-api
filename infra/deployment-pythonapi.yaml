apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-api-deployment
  labels:
    app: pythonapi
  namespace: w255
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pythonapi
  template:
    metadata:
      labels:
        app: pythonapi
    spec:
      containers:
        - name: pythonapi
          image: lab3:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /lab/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /lab/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          startupProbe:
            httpGet:
              scheme: HTTP
              path: /lab/health
              port: 8000
            initialDelaySeconds: 10
            failureThreshold: 60
            periodSeconds: 5
          env:
            - name: REDIS_URL
              value: "redis://redis-service:6379/0"
      initContainers:
        - name: init-verify-redis-service-dns
          image: busybox
          command: ['sh', '-c', 'until nslookup redis-service.w255.svc.cluster.local; do echo waiting for redis-service.w255.svc.myapp.svc.cluster.local; sleep 10; done;']
        - name: init-verify-redis-ready
          image: busybox
          command: ['sh', '-c', "until nc -vz redis-service.w255.svc.cluster.local 6379; do echo 'waiting for redis to PONG'; sleep 10; done"]
